// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  fullName  String   @default("") @db.VarChar(255)
  phone     String?  @db.VarChar(255)
  role      Role?    @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Ticket    Ticket[]

  @@map(name: "user")
}

enum Role {
  ADMIN
  USER
}

model Concert {
  id       String   @id @default(uuid())
  name     String   @unique
  artist   String
  location String
  details  String
  date     DateTime
  Round    Round[]
  Ticket   Ticket[]
  Zone     Zone[]
}

model Payment {
  id     String         @id @default(uuid())
  status PaymentStatus? @default(PENDING)
  Ticket Ticket[]
}

enum PaymentStatus {
  PENDING
  COMPLETE
  INCOMPLETE
}

model Round {
  id        String   @id @default(uuid())
  concertId String
  concert   Concert  @relation(fields: [concertId], references: [id])
  startTime DateTime
  endTime   DateTime
  date      DateTime
  Ticket    Ticket[]
}

model Zone {
  id        String   @id @default(uuid())
  name      String   @unique
  concertId String
  concert   Concert  @relation(fields: [concertId], references: [id])
  totalSeat Int
  Ticket    Ticket[]
}

model Ticket {
  id        String   @id @default(uuid())
  concertId String
  concert   Concert  @relation(fields: [concertId], references: [id])
  roundId   String
  round     Round    @relation(fields: [roundId], references: [id])
  zoneId    String
  zone      Zone     @relation(fields: [zoneId], references: [id])
  userId    String?
  user      User?    @relation(fields: [userId], references: [id])
  paymentId String?
  payment   Payment? @relation(fields: [paymentId], references: [id])
  price     Int
}
